{"version":3,"sources":["List.js","App.js","index.js"],"names":["List","goods","map","good","key","defaultProps","React","memo","goodsFromServer","App","state","visibleGoods","value","displayClass","showGoods","setState","reverse","sortByAlpha","sort","productA","productB","localeCompare","sortByLength","length","reset","handleChange","event","target","handleSubmit","alert","preventDefault","filter","product","parseInt","this","className","cn","Action","type","onClick","onSubmit","onChange","Array","keys","slice","number","Component","ReactDOM","render","document","getElementById"],"mappings":"4PAGaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClB,4BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,GACNA,QAKTH,EAAKK,aAAe,CAClBJ,MAAO,IAMMK,IAAMC,KAAKP,GAAXM,ICbTE,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6HaC,E,4MAzHbC,MAAQ,CACNT,MAAO,GACPU,aAAc,GACdC,MAAO,IACPC,cAAc,G,EAGhBC,UAAY,WACV,EAAKC,SAAS,CACZd,MAAOO,EACPG,aAAcH,EACdK,cAAc,K,EAIlBG,QAAU,WACR,EAAKD,UAAS,SAAAL,GAAK,MAAK,CAAEC,aAAc,YAAID,EAAMC,cAAcK,e,EAGlEC,YAAc,WACZ,EAAKF,UAAS,SAAAL,GAAK,MAAK,CACtBC,aAAc,YAAID,EAAMC,cACrBO,MAAK,SAACC,EAAUC,GAAX,OAAwBD,EAASE,cAAcD,W,EAI3DE,aAAe,WACb,EAAKP,UAAS,SAAAL,GAAK,MAAK,CACtBC,aAAc,YAAID,EAAMC,cACrBO,MAAK,SAACC,EAAUC,GAAX,OAAwBD,EAASI,OAASH,EAASG,e,EAI/DC,MAAQ,WACN,EAAKT,UAAS,SAAAL,GAAK,MAAK,CACtBC,aAAa,YAAKD,EAAMT,OAAQW,MAAO,S,EAI3Ca,aAAe,SAACC,GACd,EAAKX,SAAS,CAAEH,MAAOc,EAAMC,OAAOf,S,EAGtCgB,aAAe,SAACF,GACdG,MAAM,iCAAD,OAAkC,EAAKnB,MAAME,MAA7C,4BACLc,EAAMI,iBACN,EAAKf,UAAS,SAAAL,GAAK,MAAK,CACtBC,aAAcD,EAAMT,MAAM8B,QAAO,SAAAC,GAAO,OAAIA,EAAQT,QAAUU,SAASvB,EAAME,MAAO,Y,uDAI9E,IAAD,EACgCsB,KAAKxB,MAApCC,EADD,EACCA,aAAcE,EADf,EACeA,aAEtB,OACE,yBAAKsB,UAAU,OACb,iDAEG,IACA,IACAxB,EAAaY,QAEhB,kBAAC,EAAD,CAAMtB,MAAOU,IACb,yBAAKwB,UAAU,aACb,4BACEA,UAAWC,IAAG,CAAEC,QAAyB,IAAjBxB,IACxByB,KAAK,SACLC,QAASL,KAAKpB,WAHhB,YAOA,yBAAKqB,UAAWC,IAAG,CAAEC,QAAyB,IAAjBxB,KAC3B,4BACEyB,KAAK,SACLC,QAASL,KAAKlB,SAFhB,WAMA,4BACEsB,KAAK,SACLC,QAASL,KAAKjB,aAFhB,uBAMA,4BACEqB,KAAK,SACLC,QAASL,KAAKZ,cAFhB,kBAMA,4BACEgB,KAAK,SACLC,QAASL,KAAKV,OAFhB,SAMA,0BACEgB,SAAUN,KAAKN,cAEf,iEAEE,4BAAQhB,MAAOsB,KAAKxB,MAAME,MAAO6B,SAAUP,KAAKT,cAC7C,YAAIiB,MAAM,IAAIC,QAAQC,MAAM,GAAG1C,KAAI,SAAA2C,GAAM,OACxC,4BACEzC,IAAKyC,EACLjC,MAAOiC,GAENA,QAKT,2BAAOP,KAAK,SAAS1B,MAAM,mB,GAjHvBN,IAAMwC,WCfxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c2f02542.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const List = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\nList.defaultProps = {\n  goods: [],\n};\n\nList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired),\n};\nexport default React.memo(List);\n","/* eslint-disable max-len */\nimport React from 'react';\nimport './App.css';\nimport cn from 'classnames';\nimport { List } from './List';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n    visibleGoods: [],\n    value: '1',\n    displayClass: false,\n  }\n\n  showGoods = () => {\n    this.setState({\n      goods: goodsFromServer,\n      visibleGoods: goodsFromServer,\n      displayClass: true,\n    });\n  }\n\n  reverse = () => {\n    this.setState(state => ({ visibleGoods: [...state.visibleGoods].reverse() }));\n  }\n\n  sortByAlpha = () => {\n    this.setState(state => ({\n      visibleGoods: [...state.visibleGoods]\n        .sort((productA, productB) => productA.localeCompare(productB)),\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      visibleGoods: [...state.visibleGoods]\n        .sort((productA, productB) => productA.length - productB.length),\n    }));\n  }\n\n  reset = () => {\n    this.setState(state => ({\n      visibleGoods: [...state.goods], value: '1',\n    }));\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    alert(`Length of the good is set to: ${this.state.value} or more letters length`);\n    event.preventDefault();\n    this.setState(state => ({\n      visibleGoods: state.goods.filter(product => product.length >= parseInt(state.value, 10)),\n    }));\n  }\n\n  render() {\n    const { visibleGoods, displayClass } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Goods List Length:\n          {' '}\n          {' '}\n          {visibleGoods.length}\n        </h1>\n        <List goods={visibleGoods} />\n        <div className=\"Container\">\n          <button\n            className={cn({ Action: displayClass === true })}\n            type=\"button\"\n            onClick={this.showGoods}\n          >\n            ShowList\n          </button>\n          <div className={cn({ Action: displayClass === false })}>\n            <button\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.sortByAlpha}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              Sort by Length\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n            <form\n              onSubmit={this.handleSubmit}\n            >\n              <label>\n                Pick the length of the product:\n                <select value={this.state.value} onChange={this.handleChange}>\n                  {[...Array(11).keys()].slice(1).map(number => (\n                    <option\n                      key={number}\n                      value={number}\n                    >\n                      {number}\n                    </option>\n                  ))}\n                </select>\n              </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}